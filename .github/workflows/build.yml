name: Build

on:
  push:
    branches:
      - '**'
    tags:
      - '**'

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Use Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '14'
        cache: 'npm'
    - name: download mikeros tools
      uses: arma-actions/mikero-tools@latest
    - name: Install deps
      run: npm i

    - name: Build debug
      if: "!startsWith(github.ref, 'refs/tags/v')"
      run: npm run buildAndPack:debug
    - name: Zip debug artifacts
      if: "!startsWith(github.ref, 'refs/tags/v')"
      run: zip -r server-manager.zip build/*
    - name: Archive debug build artifacts
      if: "!startsWith(github.ref, 'refs/tags/v')"
      uses: actions/upload-artifact@v3
      with:
        name: server-manager.zip
        path: ./server-manager.zip

    - name: Build
      if: startsWith(github.ref, 'refs/tags/v')
      run: npm run buildAndPack
    - name: Zip artifacts
      if: startsWith(github.ref, 'refs/tags/v')
      run: zip -r server-manager.zip build/*
    - name: Create release
      if: startsWith(github.ref, 'refs/tags/v')
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false
    - name: Upload Release Asset
      if: startsWith(github.ref, 'refs/tags/v')
      id: upload-release-asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./server-manager.zip
        asset_name: server-manager.zip
        asset_content_type: application/zip
